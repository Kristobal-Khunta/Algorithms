# B. Дома и магазины

# Ограничение времени	1 секунда
# Ограничение памяти	64Mb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt
# На Новом проспекте построили подряд 10 зданий.
# Каждое здание может быть либо жилым домом,
# либо магазином, либо офисным зданием.
# Но оказалось, что жителям некоторых домов на Новом проспекте
#  слишком далеко приходится идти до ближайшего магазина.
#   Для разработки плана развития общественного транспорта на
#   Новом проспекте мэр города попросил вас выяснить,
#    какое же наибольшее расстояние приходится преодолевать жителям Нового проспекта,
#    чтобы дойти от своего дома до ближайшего магазина.
# Формат ввода

# Программа получает на вход десять чисел, разделенных пробелами.
# Каждое число задает тип здания на Новом проспекте: число 1 обозначает жилой дом,
# число 2 обозначает магазин, число 0 обозначает офисное здание.
#  Гарантируется, что на Новом проспекте есть хотя бы один жилой дом
#  и хотя бы один магазин.
# Формат вывода

# Выведите одно целое число: наибольшее
# расстояние от дома до ближайшего к нему магазина.
#  Расстояние между двумя соседними домами считается равным 1
#  (то есть если два дома стоят рядом, то между ними расстояние 1,
#  если между двумя домами есть еще один дом, то расстояние между ними равно 2 и т.д.)

# Решение за n^2
def find_min_dist(i, values, store_val=2):
    counter = 11
    for j, v in enumerate(values):
        if v == store_val:
            counter = min(counter, abs(j - i))
    return counter


if __name__ == "__main__":
    values = list(map(int, input().split()))
    counter = 0
    for i, v in enumerate(values):
        if v == 1:
            counter_v = find_min_dist(i, values)
            if counter_v > counter:
                counter = counter_v
    print(counter)
