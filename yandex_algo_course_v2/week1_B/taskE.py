# На координатной плоскости расположены равнобедренный прямоугольный треугольник
# ABC с длиной катета d и точка X. Катеты треугольника лежат на осях координат,
# а вершины расположены в точках: A (0,0), B (d,0), C (0,d).

# Напишите программу, которая определяет взаимное расположение точки X и
# треугольника. Если точка X расположена внутри или на сторонах треугольника,
# выведите 0. Если же точка находится вне треугольника, выведите номер ближайшей к ней вершины.

# Формат ввода
# Сначала вводится натуральное число d (не превосходящее 1000),
# а затем координаты точки X – два целых числа из диапазона от ­–1000 до 1000.

# Формат вывода
# Если точка лежит внутри, на стороне треугольника или совпадает с одной из вершин,
# то выведите число 0. Если точка лежит вне треугольника,
# то выведите номер вершины треугольника, к которой она расположена ближе всего
# (1 – к вершине A, 2 – к B, 3 – к C).
# Если точка расположена на одинаковом расстоянии от двух вершин,
# выведите ту вершину, номер которой меньше.

d = int(input())
x, y = map(int, input().split())


def point_and_triangle(x, y, d):
    assert d > 0
    if x >= 0 and y >= 0 and x + y <= d:
        return 0
    dist_A = x ** 2 + y ** 2
    dist_B = (x - d) ** 2 + y ** 2
    dist_C = x ** 2 + (y - d) ** 2
    if dist_A <= dist_B and dist_A <= dist_C:
        return 1
    elif dist_B <= dist_A and dist_B <= dist_C:
        return 2
    else:
        return 3


assert point_and_triangle(0, 0, 1) == 0

print(point_and_triangle(x, y, d))

